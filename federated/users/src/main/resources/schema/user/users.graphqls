type User @key(fields: "id"){
    id: ID!
    name: String!
    username: String!
    email: String!
    country: Country!
    role: Role!
    notifications: [Notification!]!
}

type Country @key(fields: "id"){
    id: ID!
    name: String!
}

type Role @key(fields: "id"){
    id: ID!
    name: String!
}

input UserRequestDTO{
    id: ID
    username: String!
    password: String!
    name: String!
    email: String!
    countryId:ID!
    roleId: ID!
}

input UserLoginDTO{
    username:String!
    password:String!
}

extend type Query {
    getUsers: [User]
    getUser(id: ID): User
    getUserByUsername(username: String!): User
    checkUserLogin(user: UserLoginDTO!): Boolean
    getCountries: [Country!]
    getCountry(id: ID): Country
    getRoles: [Role!]
    getRole(id: ID): Role
}

extend type Mutation{
    insertUser(input: UserRequestDTO): User
    updateUser(input: UserRequestDTO): User
}

